%title google命名规范
= 命名约定 =
== 通用命名 ==
尽可能给出描述性名称

除非放到项目外也非常明了，否则不要使用缩写

不要用省略字母的缩写

== 文件命名 ==
文件名要全部小写，可以包含下划线（_）或短线（-），按项目约定来。

通常，尽量让文件名更加明确，http_server_logs.h就比logs.h要好，定义类时文件名一般成对出现，如foo_bar.h和foo_bar.cc，对应类FooBar。

== 类型命名 ==
类型命名每个单词以大写字母开头，不包含下划线：MyExcitingClass、MyExcitingEnum。

所有类型命名——类、结构体、类型定义（typedef）、枚举——使用相同约定


== 变量命名 ==

变量名一律小写，单词间以下划线相连，类的成员变量以下划线结尾，如my_exciting_local_variable、my_exciting_member_variable_。

== 函数命名 ==

普通函数（regular functions，译者注，这里与访问函数等特殊函数相对）大小写混合，存取函数（accessors and mutators）则要求与变量名匹配：MyExcitingFunction()、MyExcitingMethod()、my_exciting_member_variable()、set_my_exciting_member_variable()。

普通函数：

函数名以大写字母开头，每个单词首字母大写，没有下划线：

    AddTableEntry()
    DeleteUrl()

存取函数：存取函数要与存取的变量名匹配，这儿摘录一个拥有实例变量num_entries_的类：

{{{
class MyClass {
 public:
  ...
  int num_entries() const { return num_entries_; }
  void set_num_entries(int num_entries) { num_entries_ = num_entries; }

 private:
  int num_entries_;
};
}}}
