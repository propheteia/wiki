%title Virtualenv 
== 基本使用方法 ==
==== 以安装Flask环境为例: ====
{{{
cd project  
virtualenv env
. env/bin/active (或source env/bin/active)
easy_install Flask (用easy_install -m Flask卸载)
}}}
    退出环境：deactivate
==== 简单分析 ====
来自:http://www.cnblogs.com/babykick/archive/2011/12/05/2276825.html
    在创建虚拟环境时，我们可以添加 "--no-site-packages" 参数指示虚拟环境不要访问 global site-packages。
    $ virtualenv --no-site-packages test2
    搜索路径中除了 Python 基本库路径外，已经没有了 global site-packages。这样即便我们在安装了大量开发包的的系统里，也可以隔离出一个干净的测试环境。
== setup.py的安装和卸载 ==
{{{
cd project
virtualenv env
. env/bin/active (或source env/bin/active)
python setup.py install  --record log
}}}
这是所有的安装细节都写到log中了,查看：
{{{
env/lib/python2.7/site-packages/ReText/htmldialog.py
env/lib/python2.7/site-packages/ReText/highlighter.py
env/lib/python2.7/site-packages/ReText/__init__.py
env/lib/python2.7/site-packages/ReText/webpages.py
env/lib/python2.7/site-packages/ReText/window.py
env/lib/python2.7/site-packages/ReText/editor.py
env/lib/python2.7/site-packages/ReText/htmldialog.pyc
env/lib/python2.7/site-packages/ReText/highlighter.pyc
env/lib/python2.7/site-packages/ReText/__init__.pyc
env/lib/python2.7/site-packages/ReText/webpages.pyc
env/lib/python2.7/site-packages/ReText/window.pyc
env/lib/python2.7/site-packages/ReText/editor.pyc
env/bin/retext.py
env/bin/wpgen.py
env/lib/python2.7/site-packages/ReText-4.0.0-py2.7.egg-info
}}}
是装在当前项目的环境之下

卸载的话也很方便:
    cat log ｜ xagrs rm －rf

当然setup模块应该有直接删除的命令。
== 隔离环境能否访问全局的site-packages目录？ ==
在隔离环境下安装Retext时发现没有pyqt.core模块，但在全局环境下就没有这个问题。
经过比较,发现默认情况下使用--no-site-packages,于是不能访问系统全局的site-packages目录。

$ virtualenv [OPTIONS] DEST_DIR

-h, --help
    显示帮助信息。

--no-site-packages
    令隔离环境不能访问系统全局的site-packages目录。
    sys.path得到的site-package仅在env环境下

--system-site-packages
    令隔离环境可以访问系统全局的site-packages目录。
    sys.path看到包含系统全局目录
    (virtualenv --system-site-packages ENV 创建的隔离环境能直接引用 /usr/lib/python2.7/site-packages (即是本机全局site-packages路径)中的模块。
    

只在拥有全局site-packages目录的读写权限，并且你的应用要依赖其中的模块的情况下，该参数会很有用。其他情况下没必要使用该参数。PYTHON_EXE, --python=PYTHON_EXE

    指定所用的python解析器的版本，比如 --python=python2.5 就使用2.5版本的解析器创建新的隔离环境。 默认使用的是当前系统安装(/usr/bin/python)的python解析器

参考：[[https://virtualenv-chinese-docs.readthedocs.org/en/latest/#id16|virtualenv_doc]]

[[http://stackoverflow.com/questions/3371136/revert-the-no-site-packages-option-with-virtualenv|Revert the --no-site-packages option with virtualenv]]
== 关于site-packages目录 ==
[[http://stackoverflow.com/questions/249283/virtualenv-on-ubuntu-with-no-site-packages|site-package]]


