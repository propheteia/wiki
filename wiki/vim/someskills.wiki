%title Skill
= Vim学习　=
%toc
===中文输入的解决===
  * 安装fcitx插件。[[http://www.vim.org/scripts/script.php?script_id=3764 | fcitx插件]]
  * 在.vimrc中插入: set:ttimeoutlen=100 减少退出插入时的延时
===将若干行注释===
 * 将1到10行注释 --> :1,10s/^/#/g 

===Ctags===
* To split the current window and jump to the tag under the cursor use this
command: 
        CTRL-W ]
===Taglist===
* 提供函数列表
* let Tlist_Show_One_File=1
* let Tlist_Exit_OnlyWindow=1

===Cscope===
{{{
0 or s: Find this C symbol
1 or g: Find this definition
2 or d: Find functions called by this function
3 or c: Find functions calling this function
4 or t: Find this text string
6 or e: Find this egrep pattern
7 or f: Find this file
8 or i: Find files #including this file
}}}
===Substitute===
     :%s/a/b/gc</br>
     g:行中所有</br>
     %:全文    </br>
     c:Confirm </br>
===VIM Color Scheme Test ===
*原文:* http://vimcolorschemetest.googlecode.com/svn/html/index-c.html

===python在vim中的代码缩进===
| 变量名        | 缩写    | 含义                                                            |
|---------------|---------|-----------------------------------------------------------------|
| tabstop=X     | ts      | 编辑时一个TAB字符占多少个空格的位置。                           |
| shiftwidth=X  | sw      | 使用每层缩进的空格数。                                          |
| (no)expandtab | (no)et  | 是否将输入的TAB自动展开成空格。开启后要输入TAB，需要Ctrl-V<TAB> |
| softtabstop=X | sts     | 方便在开启了et后使用退格（backspace）键，每次退格将删除X个空格  |
| (no)smarttab  | (no)sta | 开启时，在行首按TAB将加入sw个空格，否则加入ts个空格。           |
我的设置：
    set noexpandtab<br>
    set tabstop=4<br>
    set softtabstop=0<br>
    set shiftwidth=4<br>

python是靠缩进来决定语句的层次关系的，所以你的缩进风格一定要统一，并且不能把空格和tab混起来用

=== 对于某一文档做特殊的处理，可以在编辑器中设置"：set ..." ===
*参考：*[[http://tedlogan.com/techblog3.html|Secret of Tabs in Vim]]

=== 来自简明VIM练级攻略 ===
 转载:[[http://coolshell.cn/articles/5426.html|VIM练级攻略]] 
* % : 匹配括号移动，包括 (, {, [. )
* 0 - 到行头 
* ^ - 到本行第一个非空字符
* g_ - 到本行最后一个非空字符
* <action>a<object> 和 <action>i<object>
 
{{{ 
     action可以是任何的命令，如 d (删除), y (拷贝), v (可以视模式选择)。
     object 可能是： w 一个单词， W 一个以空格为分隔的单词， s 一个句字，
      p 一个段落。也可以是一个特别的字符："、 '、 )、 }、 ]。
}}}
* 块操作: <C-v>
     块操作，典型的操作： 0 <C-v> <C-d> I-- [ESC]
* 在所有被选择的行后加上点东西：
 
{{{
    <C-v>        
    选中相关的行 (可使用 j 或 <C-d> 或是 /pattern 或是 % 等……)
    $ 到行最后
    A, 输入字符串，按 ESC。
}}}
* J → 把所有的行连接起来（变成一行）
 
{{{
     < 或 > → 左右缩进
     = → 自动给缩进 （陈皓注：这个功能相当强大，我太喜欢了）
}}}
* 运行vimtutor
[[*]] ZZ 保存并且退出
=== 快捷键退出保存 ===
{{{
nmap <leader>s :w!<cr>
nmap <leader>w :wq!<cr>
nmap <leader>q :q!<cr>
}}}
